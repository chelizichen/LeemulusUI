强缓存
    第一次请求，向浏览器缓存发起 Http 请求，
    若浏览器没有该请求的缓存结果和缓存标识，
    则重新回到浏览器再次发起 Http 请求（向服务器）

    若存在该缓存结果，
    且该结果尚未生效，
    强制缓存生效，
    直至返回该结果，
    此时不再向 Http 发起请求

强制缓存的缓存规则
    当浏览器向服务器发起请求时，
    服务器会将缓存规则放入HTTP响应报文的HTTP头中和请求结果一起返回给浏览器，
    控制强制缓存的字段分别是Expires和Cache-Control，
    其中Cache-Control优先级比Expires高。

Expires:
    缓存过期时间，用来指定资源到期的时间，是服务器端的具体的时间点。
    也就是说，Expires=max-age + 请求时间，需要和Last-modified结合使用。
    Expires是Web服务器响应消息头字段，
    在响应http请求时告诉浏览器在过期时间前浏览器可以直接从浏览器缓存取数据，
    而无需再次请求。
    Expires 是 HTTP/1 的产物，受限于本地时间，如果修改了本地时间，可能会造成缓存失效。

Cache-Control:
    在HTTP/1.1中，Cache-Control是最重要的规则，主要用于控制网页缓存，
    主要取值为： 
        - public：所有内容都将被缓存（客户端和代理服务器都可缓存） 
        - private：所有内容只有客户端可以缓存，Cache-Control的默认取值 
        - no-cache：客户端缓存内容，但是是否使用缓存则需要经过协商缓存来验证决定 
        - no-store：所有内容都不会被缓存，即不使用强制缓存，也不使用协商缓存 
        - max-age=xxx (xxx is numeric)：缓存内容将在xxx秒后失效

示例：
    响应标头：
        cache-control: max-age=86400, public
    请求标头：
        cache-control: max-age=0

设置：
    强缓存需要服务端设置expires和cache-control。

协商缓存：
    协商缓存就是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，
    由服务器根据缓存标识决定是否使用缓存的过程，
        主要有以下两种情况：
            1：协商缓存生效，返回304和Not Modified
                浏览器发起 Http 请求给浏览器缓存,
                请求的返回结果失效，则只返回缓存标识，
                浏览器携带 缓存标识 向服务端发起 Http 请求，
                若资源没有更新
                返回 给浏览器 HttpCode 304 ,该资源无更新
                浏览器 获取该请求的缓存结果
                浏览器 返回该请求的缓存结果

            2：协商缓存失效，返回200和请求结果
                浏览器发起 Http 请求给浏览器缓存,
                请求的返回结果失效，则只返回缓存标识，
                浏览器携带 缓存标识 向服务端发起 Http 请求，
                若资源更新，
                返回 给浏览器 HttpCode 200 ,重新返回请求结果
                浏览器将该请求结果和缓存标识存入浏览器缓存中
                



